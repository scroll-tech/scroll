name: Database

on:
  push:
    branches:
      - main
      - staging
      - develop
      - alpha
    paths:
      - 'database/**'
      - 'common/**'
      - '!common/version/version.go'
      - '.github/workflows/database.yml'
  pull_request:
    types:
      - opened
      - reopened
      - synchronize
      - ready_for_review
    paths:
      - 'database/**'
      - 'common/**'
      - '!common/version/version.go'
      - '.github/workflows/database.yml'

jobs:
  check:
    if: github.event.pull_request.draft == false
    runs-on: ubuntu-latest
    steps:
    - name: Install Go
      uses: actions/setup-go@v2
      with:
        go-version: 1.20.x
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Lint
      working-directory: 'database'
      run: |
        rm -rf $HOME/.cache/golangci-lint
        make lint
  goimports-lint:
    if: github.event.pull_request.draft == false
    runs-on: ubuntu-latest
    steps:
    - name: Install Go
      uses: actions/setup-go@v2
      with:
        go-version: 1.20.x
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Install goimports
      run: go install golang.org/x/tools/cmd/goimports
    - name: Run goimports lint
      working-directory: 'database'
      run: goimports -local scroll-tech/database/ -w .
    - name: Run go mod tidy
      working-directory: 'database'
      run: go mod tidy
    # If there are any diffs from goimports or go mod tidy, fail.
    - name: Verify no changes from goimports and go mod tidy
      working-directory: 'database'
      run: |
        if [ -n "$(git status --porcelain)" ]; then
          exit 1
        fi
  tests:
    if: github.event.pull_request.draft == false
    runs-on: ubuntu-latest
    steps:
    - name: Install Go
      uses: actions/setup-go@v2
      with:
        go-version: 1.20.x
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Install Solc
      uses: supplypike/setup-bin@v3
      with:
        uri: 'https://github.com/ethereum/solidity/releases/download/v0.8.16/solc-static-linux'
        name: 'solc'
        version: '0.8.16'
    - name: Install Geth Tools
      uses: gacts/install-geth-tools@v1
    - name: Build prerequisites
      run: |
        make dev_docker
    - name: Test database packages
      working-directory: 'database'
      run: |
        go test -v -race -gcflags="-l" -ldflags="-s=false" -coverprofile=coverage.txt -covermode=atomic ./...
    - name: Upload coverage reports to Codecov
      uses: codecov/codecov-action@v3
      env:
        CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
      with:
        flags: database
